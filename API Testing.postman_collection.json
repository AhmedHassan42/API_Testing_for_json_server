{
	"info": {
		"_postman_id": "171aa5e0-5a30-476f-8357-f3d5cf5d6ba7",
		"name": "API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36788011"
	},
	"item": [
		{
			"name": "Add user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonFile= pm.response.json()\r",
							"var userID= jsonFile.id\r",
							"\r",
							"pm.environment.set(\"user\", userID);\r",
							"\r",
							"pm.test(\"verify that POST request is done successfully\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 6,\r\n    \"name\": \"lara\",\r\n    \"role\": \"devops engineer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify that status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//pm.test(\"Body matches string\", function () {\r",
							"//    pm.expect(pm.response.text()).to.include(\"omar\");\r",
							"//});\r",
							"\r",
							"pm.test(\"verify that response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users/{{user}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify that status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify that response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 4,\r\n    \"name\": \"Hamza\",\r\n    \"role\": \"Product owner\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/{{user}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify that response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"verify that status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/users/{{user}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"{{user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "All users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify that status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"verify that response body included user omar\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"omar\");\r",
							"});\r",
							"\r",
							"pm.test(\"verify that response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	]
}